// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RentEase.Data.DBContext;

#nullable disable

namespace RentEase.Data.Migrations
{
    [DbContext(typeof(RentEaseContext))]
    [Migration("20250314063438_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RentEase.Data.Models.Account", b =>
                {
                    b.Property<string>("AccountId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<bool?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.HasKey("AccountId")
                        .HasName("PK__Account__349DA5A62F5DEB04");

                    b.HasIndex(new[] { "Email" }, "IX_Account_Email");

                    b.HasIndex(new[] { "PhoneNumber" }, "IX_Account_PhoneNumber");

                    b.HasIndex(new[] { "RoleId" }, "IX_Account_RoleId");

                    b.HasIndex(new[] { "PhoneNumber" }, "UQ__Account__85FB4E38627969EB");

                    b.HasIndex(new[] { "Email" }, "UQ__Account__A9D1053441F530BF");

                    b.ToTable("Account", (string)null);
                });

            modelBuilder.Entity("RentEase.Data.Models.AccountToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("datetime");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK__AccountT__3214EC074C2E87F3");

                    b.HasIndex(new[] { "AccountId" }, "IX_AccountToken_AccountId");

                    b.ToTable("AccountToken", (string)null);
                });

            modelBuilder.Entity("RentEase.Data.Models.AccountVerification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsUsed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("VerificationCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__AccountV__3214EC07812979E0");

                    b.HasIndex("AccountId");

                    b.ToTable("AccountVerification", (string)null);
                });

            modelBuilder.Entity("RentEase.Data.Models.Apt", b =>
                {
                    b.Property<string>("AptId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("AddressLink")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("AptCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("AptStatusId")
                        .HasColumnType("int");

                    b.Property<double?>("Area")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("DistrictId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfRoom")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfSlot")
                        .HasColumnType("int");

                    b.Property<string>("OwnerId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long?>("PilePrice")
                        .HasColumnType("bigint");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<double?>("Rating")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<long>("RentPrice")
                        .HasColumnType("bigint");

                    b.Property<bool?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("WardId")
                        .HasColumnType("int");

                    b.HasKey("AptId")
                        .HasName("PK__Apt__8D24E77238D6C477");

                    b.HasIndex(new[] { "AptCategoryId" }, "IX_Apt_AptCategory");

                    b.HasIndex(new[] { "AptStatusId" }, "IX_Apt_AptStatus");

                    b.HasIndex(new[] { "OwnerId" }, "IX_Apt_OwnerId");

                    b.ToTable("Apt", (string)null);
                });

            modelBuilder.Entity("RentEase.Data.Models.AptCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK__AptCateg__3214EC07B602F106");

                    b.HasIndex(new[] { "CategoryName" }, "UQ__AptCateg__8517B2E008B30AFE")
                        .IsUnique();

                    b.ToTable("AptCategory", (string)null);
                });

            modelBuilder.Entity("RentEase.Data.Models.AptImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AptId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ImageURL");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK__AptImage__8D24E772761F5E0C");

                    b.HasIndex("AptId")
                        .IsUnique()
                        .HasFilter("[AptId] IS NOT NULL");

                    b.ToTable("AptImage", (string)null);
                });

            modelBuilder.Entity("RentEase.Data.Models.AptStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK__AptStatu__3214EC0701430943");

                    b.HasIndex(new[] { "StatusName" }, "UQ__AptStatu__05E7698A86EA1D6C")
                        .IsUnique();

                    b.ToTable("AptStatus", (string)null);
                });

            modelBuilder.Entity("RentEase.Data.Models.AptUtility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AptId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("UtilityId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__AptUtili__3214EC07540A0EA3");

                    b.HasIndex(new[] { "AptId" }, "IX_AptUtility_AptId");

                    b.HasIndex(new[] { "UtilityId" }, "IX_AptUtility_UtilityId");

                    b.HasIndex(new[] { "AptId", "UtilityId" }, "UQ_AptUtility")
                        .IsUnique();

                    b.ToTable("AptUtility", (string)null);
                });

            modelBuilder.Entity("RentEase.Data.Models.Order", b =>
                {
                    b.Property<string>("OrderId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("CancelleddAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<decimal>("IncurredCost")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("PaidAt")
                        .HasColumnType("datetime");

                    b.Property<int>("PaymentStatusId")
                        .HasColumnType("int");

                    b.Property<string>("SenderId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("TransactionTypeId")
                        .HasColumnType("int");

                    b.HasKey("OrderId")
                        .HasName("PK__Orders__C3905BCF74207269");

                    b.HasIndex("SenderId");

                    b.HasIndex("TransactionTypeId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("RentEase.Data.Models.Post", b =>
                {
                    b.Property<string>("PostId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AptId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("CurrentSlot")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("MoveInDate")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("MoveOutDate")
                        .HasColumnType("date");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OldId")
                        .HasColumnType("int");

                    b.Property<bool?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("TotalSlot")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.HasKey("PostId")
                        .HasName("PK__Post__AA1260182BDDB060");

                    b.HasIndex("AccountId");

                    b.HasIndex("AptId");

                    b.ToTable("Post", (string)null);
                });

            modelBuilder.Entity("RentEase.Data.Models.PostRequire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK__PostRequ__3214EC0721C7FA81");

                    b.HasIndex("AccountId");

                    b.HasIndex("PostId");

                    b.ToTable("PostRequire", (string)null);
                });

            modelBuilder.Entity("RentEase.Data.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AptId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Comment")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<double?>("Rating")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK__Review__3214EC071860634A");

                    b.HasIndex(new[] { "AccountId" }, "IX_Review_AccountId");

                    b.HasIndex(new[] { "AptId" }, "IX_Review_AptId");

                    b.ToTable("Review", (string)null);
                });

            modelBuilder.Entity("RentEase.Data.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK__Role__3214EC074195CB0F");

                    b.HasIndex(new[] { "RoleName" }, "UQ__Role__8A2B616060E7C55B")
                        .IsUnique();

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("RentEase.Data.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CancelleddAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("PaidAt")
                        .HasColumnType("datetime");

                    b.Property<int>("PaymentAttempt")
                        .HasColumnType("int");

                    b.Property<string>("PaymentCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("PaymentStatusId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("TransactionTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Transact__3214EC07438D024A");

                    b.HasIndex("OrderId");

                    b.HasIndex("TransactionTypeId");

                    b.ToTable("Transaction", (string)null);
                });

            modelBuilder.Entity("RentEase.Data.Models.TransactionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK__Transact__3214EC07450B5CD3");

                    b.HasIndex(new[] { "TypeName" }, "UQ__Transact__D4E7DFA8FCA6D65C")
                        .IsUnique();

                    b.ToTable("TransactionType", (string)null);
                });

            modelBuilder.Entity("RentEase.Data.Models.Utility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("UtilityName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Utility__3214EC07BD26B4C7");

                    b.HasIndex(new[] { "UtilityName" }, "UQ__Utility__E8B225D6E81AEADB")
                        .IsUnique();

                    b.ToTable("Utility", (string)null);
                });

            modelBuilder.Entity("RentEase.Data.Models.Account", b =>
                {
                    b.HasOne("RentEase.Data.Models.Role", "Role")
                        .WithMany("Accounts")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK_Account_Role");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("RentEase.Data.Models.AccountToken", b =>
                {
                    b.HasOne("RentEase.Data.Models.Account", "Account")
                        .WithMany("AccountTokens")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_AccountToken_Account");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("RentEase.Data.Models.AccountVerification", b =>
                {
                    b.HasOne("RentEase.Data.Models.Account", "Account")
                        .WithMany("AccountVerifications")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_AccountVerification_Account");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("RentEase.Data.Models.Apt", b =>
                {
                    b.HasOne("RentEase.Data.Models.AptCategory", "AptCategory")
                        .WithMany("Apts")
                        .HasForeignKey("AptCategoryId")
                        .IsRequired()
                        .HasConstraintName("FK_Apt_AptCategory");

                    b.HasOne("RentEase.Data.Models.AptStatus", "AptStatus")
                        .WithMany("Apts")
                        .HasForeignKey("AptStatusId")
                        .IsRequired()
                        .HasConstraintName("FK_Apt_AptStatus");

                    b.Navigation("AptCategory");

                    b.Navigation("AptStatus");
                });

            modelBuilder.Entity("RentEase.Data.Models.AptImage", b =>
                {
                    b.HasOne("RentEase.Data.Models.Apt", "Apt")
                        .WithOne("AptImage")
                        .HasForeignKey("RentEase.Data.Models.AptImage", "AptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_AptImage_Apt");

                    b.Navigation("Apt");
                });

            modelBuilder.Entity("RentEase.Data.Models.AptUtility", b =>
                {
                    b.HasOne("RentEase.Data.Models.Apt", "Apt")
                        .WithMany("AptUtilities")
                        .HasForeignKey("AptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_AptUtility_Apt");

                    b.HasOne("RentEase.Data.Models.Utility", "Utility")
                        .WithMany("AptUtilities")
                        .HasForeignKey("UtilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_AptUtility_Utility");

                    b.Navigation("Apt");

                    b.Navigation("Utility");
                });

            modelBuilder.Entity("RentEase.Data.Models.Order", b =>
                {
                    b.HasOne("RentEase.Data.Models.Account", "Sender")
                        .WithMany("Orders")
                        .HasForeignKey("SenderId")
                        .IsRequired()
                        .HasConstraintName("FK_Order_Sender");

                    b.HasOne("RentEase.Data.Models.TransactionType", "TransactionType")
                        .WithMany("Orders")
                        .HasForeignKey("TransactionTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Order_TransactionType");

                    b.Navigation("Sender");

                    b.Navigation("TransactionType");
                });

            modelBuilder.Entity("RentEase.Data.Models.Post", b =>
                {
                    b.HasOne("RentEase.Data.Models.Account", "Account")
                        .WithMany("Posts")
                        .HasForeignKey("AccountId")
                        .IsRequired()
                        .HasConstraintName("FK_CPost_Account");

                    b.HasOne("RentEase.Data.Models.Apt", "Apt")
                        .WithMany("Posts")
                        .HasForeignKey("AptId")
                        .IsRequired()
                        .HasConstraintName("FK_Post_Apt");

                    b.Navigation("Account");

                    b.Navigation("Apt");
                });

            modelBuilder.Entity("RentEase.Data.Models.PostRequire", b =>
                {
                    b.HasOne("RentEase.Data.Models.Account", "Account")
                        .WithMany("PostRequires")
                        .HasForeignKey("AccountId")
                        .IsRequired()
                        .HasConstraintName("FK_PostRequire_Account");

                    b.HasOne("RentEase.Data.Models.Post", "Post")
                        .WithMany("PostRequires")
                        .HasForeignKey("PostId")
                        .IsRequired()
                        .HasConstraintName("FK_PostRequire_Post");

                    b.Navigation("Account");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("RentEase.Data.Models.Review", b =>
                {
                    b.HasOne("RentEase.Data.Models.Account", "Account")
                        .WithMany("Reviews")
                        .HasForeignKey("AccountId")
                        .IsRequired()
                        .HasConstraintName("FK_Review_Account");

                    b.HasOne("RentEase.Data.Models.Apt", "Apt")
                        .WithMany("Reviews")
                        .HasForeignKey("AptId")
                        .IsRequired()
                        .HasConstraintName("FK_Review_Apt");

                    b.Navigation("Account");

                    b.Navigation("Apt");
                });

            modelBuilder.Entity("RentEase.Data.Models.Transaction", b =>
                {
                    b.HasOne("RentEase.Data.Models.Order", "Order")
                        .WithMany("Transactions")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Transaction_Orders");

                    b.HasOne("RentEase.Data.Models.TransactionType", "TransactionType")
                        .WithMany("Transactions")
                        .HasForeignKey("TransactionTypeId")
                        .IsRequired()
                        .HasConstraintName("FK_Transaction_TransactionType");

                    b.Navigation("Order");

                    b.Navigation("TransactionType");
                });

            modelBuilder.Entity("RentEase.Data.Models.Account", b =>
                {
                    b.Navigation("AccountTokens");

                    b.Navigation("AccountVerifications");

                    b.Navigation("Orders");

                    b.Navigation("PostRequires");

                    b.Navigation("Posts");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("RentEase.Data.Models.Apt", b =>
                {
                    b.Navigation("AptImage");

                    b.Navigation("AptUtilities");

                    b.Navigation("Posts");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("RentEase.Data.Models.AptCategory", b =>
                {
                    b.Navigation("Apts");
                });

            modelBuilder.Entity("RentEase.Data.Models.AptStatus", b =>
                {
                    b.Navigation("Apts");
                });

            modelBuilder.Entity("RentEase.Data.Models.Order", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("RentEase.Data.Models.Post", b =>
                {
                    b.Navigation("PostRequires");
                });

            modelBuilder.Entity("RentEase.Data.Models.Role", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("RentEase.Data.Models.TransactionType", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("RentEase.Data.Models.Utility", b =>
                {
                    b.Navigation("AptUtilities");
                });
#pragma warning restore 612, 618
        }
    }
}
